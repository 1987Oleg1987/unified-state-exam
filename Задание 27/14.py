# С клавиатуры вводится последовательность неотрицательных чисел. Сначала
# указывается количество элементов последовательности, а затем идут
# сами элементы; каждый элемент указывается в отдельной строке. Некоторые
# элементы в последовательности могут повторяться. Найти два элемента
# последовательности – необязательно различные, но стоящие на разных
# позициях – которые дают максимальное произведение, не делящееся на 34.
# Вывести эти два элемента и значение их произведения. Если указанное
# произведение составить не удастся, вывести в ответ слово "NO".

n = int(input())

max_d2_n17 = -1 # максимальный элемент, делящийся на 2, но не делящийся на 17
max_d2_n17_2 = -1 # второй максимальный элемент, делящийся на 2, но не делящийся на 17

max_n2_d17 = -1 # максимальный элемент, не делящийся на 2, но делящийся на 17
max_n2_d17_2 = -1 # второй максимальный элемент, не делящийся на 2, но делящийся на 17

max_n2_n17 = -1 # максимальный элемент, не делящийся ни на 2, ни на 17
max_n2_n17_2 = -1 # второй максимальный элемент, не делящийся ни на 2, ни на 17

for i in range(n):
    x = int(input())
    r2, r17 = x % 2, x % 17

    if r2 == 0 and r17 != 0:
        if x > max_d2_n17:
            max_d2_n17_2 = max_d2_n17
            max_d2_n17 = x
            # эти две строки можно совместить в одну:
            # max_d2_n17, max_d2_n17_2 = x, max_d2_n17
        elif x > max_d2_n17_2:
            max_d2_n17_2 = x

    if r2 != 0 and r17 == 0:
        if x > max_n2_d17:
            max_n2_d17_2 = max_n2_d17
            max_n2_d17 = x
            # эти две строки можно совместить в одну:
            # max_n2_d17, max_n2_d17_2 = x, max_n2_d17
        elif x > max_n2_d17_2:
            max_n2_d17_2 = x

    if r2 != 0 and r17 != 0:
        if x > max_n2_n17:
            max_n2_n17_2 = max_n2_n17
            max_n2_n17 = x
            # эти две строки можно совместить в одну:
            # max_n2_n17, max_n2_n17_2 = x, max_n2_n17
        elif x > max_n2_n17_2:
            max_n2_n17_2 = x

maxpro = -1

if max_d2_n17 != -1 and max_d2_n17_2 != -1:
    pro = max_d2_n17 * max_d2_n17_2
    if pro > maxpro:
        maxpro = pro
        a, b = max_d2_n17, max_d2_n17_2

if max_d2_n17 != -1 and max_n2_n17 != -1:
    pro = max_d2_n17 * max_n2_n17
    if pro > maxpro:
        maxpro = pro
        a, b = max_d2_n17, max_n2_n17

if max_n2_d17 != -1 and max_n2_d17_2 != -1:
    pro = max_n2_d17 * max_n2_d17_2
    if pro > maxpro:
        maxpro = pro
        a, b = max_n2_d17, max_n2_d17_2

if max_n2_d17 != -1 and max_n2_n17 != -1:
    pro = max_n2_d17 * max_n2_n17
    if pro > maxpro:
        maxpro = pro
        a, b = max_n2_d17, max_n2_n17

if max_n2_n17 != -1 and max_n2_n17_2 != -1:
    pro = max_n2_n17 * max_n2_n17_2
    if pro > maxpro:
        maxpro = pro
        a, b = max_n2_n17, max_n2_n17_2

if maxpro == -1:
    print("NO")
else:
    print(a, b)
    print(maxpro)
