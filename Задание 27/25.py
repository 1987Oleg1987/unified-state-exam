# С клавиатуры вводится последовательность неотрицательных чисел. Сначала
# указывается количество элементов последовательности, а затем идут
# сами элементы; каждый элемент указывается в отдельной строке. Некоторые
# элементы в последовательности могут повторяться. Найти количество пар,
# которые можно составить из элементов последовательности, чтобы их
# произведение делилось на 34. Порядок элементов в паре значения не имеет,
# то есть (12, 39) и (39, 12) считаются одной и той же парой.

n = int(input())

k_d2_d17 = 0 # количество элементов, делящихся на 2 и на 17
k_d2_n17 = 0 # количество элементов, делящихся на 2, но не делящихся на 17
k_n2_d17 = 0 # количество элементов, не делящихся на 2, но делящихся на 17
k_n2_n17 = 0 # количество элементов, не делящихся ни на 2, ни на 17

for i in range(n):
    x = int(input())
    r2, r17 = x % 2, x % 17

    if r2 == 0 and r17 == 0:
        k_d2_d17 += 1

    if r2 == 0 and r17 != 0:
        k_d2_n17 += 1

    if r2 != 0 and r17 == 0:
        k_n2_d17 += 1

    if r2 != 0 and r17 != 0:
        k_n2_n17 += 1

# количество пар, где оба элемента делятся на 2 и на 17
c11 = k_d2_d17 * (k_d2_d17 - 1) // 2

# количество пар, где первый элемент делится на 2 и на 17,
# а второй делится на 2, но не делится на 17
c12 = k_d2_d17 * k_d2_n17

# количество пар, где первый элемент делится на 2 и на 17,
# а второй не делится на 2, но делится на 17
c13 = k_d2_d17 * k_n2_d17

# количество пар, где первый элемент делится на 2 и на 17,
# а второй не делится ни на 2, ни на 17
c14 = k_d2_d17 * k_n2_n17

# количество пар, где первый элемент делится на 2, но не делится на 17,
# а второй не делится на 2, но делится на 17
c23 = k_d2_n17 * k_n2_d17

total = c11 + c12 + c13 + c14 + c23
print(total)
