# Сколько существует шестнадцатеричных трёхзначных чисел, у которых
# все цифры различны и никакие две чётные или две нечётные цифры не стоят рядом?

from itertools import permutations

alphabet = "0123456789ABCDEF"  # все символы алфавита (в виде строки)

A = set("02468ACE")  # множество чётных цифр
B = set("13579BDF")  # множество нечётных цифр

counter = 0

for x in permutations(alphabet, 3):
    s = "".join(x)
    M0 = {s[0], s[2]}  # множество цифр, стоящих на чётных позициях в слове
    M1 = {s[1]}  # множество цифр, стоящих на нечётных позициях в слове
    if (s[0] != "0") and ((M0 <= A and M1 <= B) or (M0 <= B and M1 <= A)):
        counter += 1

print(counter)
