# В файле содержится последовательность натуральных чисел, каждое из 
# которых не превышает 100 000. Определите количество троек элементов 
# последовательности, в которых ровно два из трёх элементов являются 
# трёхзначными числами, а сумма элементов тройки не больше 
# максимального элемента последовательности, оканчивающегося на 13. 
# Гарантируется, что в последовательности есть хотя бы одно число, 
# оканчивающееся на 13. В ответе запишите количество найденных троек 
# чисел, затем максимальную из сумм элементов таких троек. В данной задаче 
# под тройкой подразумевается три идущих подряд элемента 
# последовательности.

f = open("File 06.txt", "r")

A = []
for s in f:
    x = int(s.rstrip('\n'))
    A.append(x)

f.close()

n = len(A)

max13 = 0

for i in range(n):
    if A[i] % 100 == 13:
        if A[i] > max13:
            max13 = A[i]

# Или так:
# for i in range(n):
#     if A[i] % 100 == 13 and A[i] > max13:
#         max13 = A[i]

# Или так:
# for i in range(n):
#     if A[i] % 100 == 13:
#         max13 = max(max13, A[i])


count = 0
maxsumm = 0

for i in range(n - 2):
    k = 0
    if 100 <= A[i] <= 999:
        k += 1
    if 100 <= A[i + 1] <= 999:
        k += 1
    if 100 <= A[i + 2] <= 999:
        k += 1
    summ = A[i] + A[i + 1] + A[i + 2]
    if k == 2 and summ <= max13:
        count += 1
        if summ > maxsumm:
            maxsumm = summ
        # Или так:
        # maxsumm = max(maxsumm, summ)

print(count, maxsumm)
